Given an array of integers, every element appears three times except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity.
Could you implement it without using extra memory?

public class Solution {
    public int singleNumber(int[] nums) {
        if(nums.length==0) {
            return 0;
        }
      int one = 0;
      int two = 0;
      int three = 0;
      for (int i = 0; i < nums.length;  i++) {
        two = two | (one & nums[i]);
        one = one ^ nums[i];
        three = one & two;
        one = one & ~three;
        two = two & ~three;
      }
      return one;
    }
}
