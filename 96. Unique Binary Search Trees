Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

   public class Solution {
       public int numTrees(int n) {
           int result = 0;
           int[] number = new int[n+1];
           number[0] = 1;
           if (n == 0) {
             return 0;
           }
           for (int i = 1; i <= n; i ++) {
             for (int j = 0; j < i; j ++) {
               number[i] += number[j] * number[i - j - 1];
             }
           }
           return number[n];
       }
   }
