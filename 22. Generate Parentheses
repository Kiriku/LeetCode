Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]


public class Solution {
  List<String> result = new ArrayList<String>();
  public List<String> generateParenthesis(int n) {
    String result1 = "";
    generate(0, 0, n, result1);
    return result;
  }

  private void generate(int left, int right, int n, String str) {
    if(right == n) {
      result.add(str);
    } else {
      if (left < n) {
        generate(left + 1, right, n, str+"(");
      } if (right < left) {
        generate(left, right + 1, n, str+")");
      }
    }
  }
}
